{"version":3,"sources":["sound/complete.mp3","components/ClockEngine.js","components/Input.js","components/mainClock.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","text","fontSize","resumeButton","borderRadius","border","width","height","margin","transition","background","color","pauseButton","Timer","props","refCallback","total","date","Date","now","renderer","rendererForTimer","ref","onComplete","Audio","complete","play","hours","minutes","seconds","completed","style","zeroPad","FullClock","clockRef","useRef","classes","Grid","container","justify","alignItems","direction","item","spacing","Button","className","variant","type","onClick","current","isPaused","start","startIcon","pause","inputField","startButton","padding","resetButton","Input","useState","hour","setHour","minute","setMinute","second","setSecond","setTotal","showRes","setShowRes","inputForm","noValidate","autoComplete","onSubmit","e","preventDefault","parseInt","alignContent","xs","href","target","rel","Avatar","alt","src","TextField","id","label","onChange","value","window","location","reload","mainContainer","display","justifyContent","overflowX","MainClock","createMuiTheme","palette","primary","main","hover","active","subtitle","error","success","shadow","header","dropdown","popup","typography","fontFamily","h1","h2","h3","h4","h5","h6","overrides","MuiButton","contained","backgroundColor","textDecoration","App","ThemeProvider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.09adb4c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/complete.64e782b7.mp3\";","import React from \"react\";\r\nimport { useRef } from 'react';\r\nimport Countdown, { zeroPad } from \"react-countdown\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport complete from '../sound/complete.mp3';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    fontSize: '150px',\r\n  },\r\n  resumeButton: {\r\n    borderRadius: '0px',\r\n    border: '1px solid transparent',\r\n    width: '100px',\r\n    height: '40px',\r\n    margin: '0',\r\n    '&:hover': {\r\n      transition: '.5s',\r\n      border: '1px solid #030065',\r\n      background: 'white',\r\n      color: '#030065',\r\n    },\r\n  },\r\n  pauseButton: {\r\n    borderRadius: '0px',\r\n    border: '1px solid transparent',\r\n    width: '100px',\r\n    height: '40px',\r\n    margin: '0',\r\n    '&:hover': {\r\n      transition: '.5s',\r\n      border: '1px solid #650000',\r\n      background: 'white',\r\n      color: '#650000',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Timer(props) {\r\n  const { refCallback, total } = props;\r\n  function handleComplete() {\r\n    var audio = new Audio(complete);\r\n    audio.play();\r\n  }\r\n  return (\r\n    <div>\r\n      <Countdown\r\n        date={Date.now() + total}\r\n        renderer={rendererForTimer}\r\n        ref={refCallback}\r\n        onComplete={handleComplete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rendererForTimer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontSize: '150px', margin: '0' }}>\r\n          TIME UP\r\n        </h1>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <h1 style={{ fontSize: '150px', margin: '0' }}>\r\n          {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default function FullClock(props) {\r\n  const clockRef = useRef();\r\n  const classes = useStyles();\r\n  const { total } = props;\r\n  const handleStart = () => {\r\n    if (clockRef.current.isPaused()) {\r\n      clockRef.current.start();\r\n    }\r\n  }\r\n  const handlePause = () => {\r\n    if (!clockRef.current.isPaused()) {\r\n      clockRef.current.pause();\r\n    }\r\n  }\r\n  return (\r\n    <Grid container\r\n      justify='center'\r\n      alignItems='center'\r\n      direction='column'\r\n    >\r\n      <Grid item>\r\n        <Timer refCallback={clockRef} total={total} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid container\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              className={classes.resumeButton}\r\n              variant='contained'\r\n              type='submit'\r\n              onClick={handleStart}\r\n              startIcon={<PlayArrowIcon />}\r\n            >\r\n              RESUME\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              className={classes.pauseButton}\r\n              variant=\"contained\"\r\n              color='secondary'\r\n              type='submit'\r\n              onClick={handlePause}\r\n              startIcon={<PauseIcon />}\r\n            >\r\n              PAUSE\r\n        </Button>\r\n          </Grid >\r\n        </Grid>\r\n      </Grid>\r\n    </Grid >\r\n  );\r\n}","import React from \"react\";\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button, Grid, Avatar } from '@material-ui/core';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n\r\nimport FullClock from './ClockEngine'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputField: {\r\n  },\r\n  startButton: {\r\n    borderRadius: '30px',\r\n    border: '1px solid transparent',\r\n    fontSize: '17px',\r\n    padding: '10px 50px 10px 50px',\r\n    '&:hover': {\r\n      transition: '.5s',\r\n      border: '1px solid #000000',\r\n      background: 'white',\r\n      color: '#000000',\r\n    },\r\n  },\r\n  resetButton: {\r\n    borderRadius: '0px',\r\n    border: '1px solid transparent',\r\n    width: '100px',\r\n    height: '40px',\r\n    margin: '0',\r\n    '&:hover': {\r\n      transition: '.5s',\r\n      border: '1px solid #000000',\r\n      background: 'white',\r\n      color: '#000000',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Input() {\r\n  const classes = useStyles();\r\n  const [hour, setHour] = useState(0);\r\n  const [minute, setMinute] = useState(0);\r\n  const [second, setSecond] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [showRes, setShowRes] = useState(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTotal((parseInt(hour) * 3600 + parseInt(minute) * 60 + parseInt(second)) * 1000);\r\n  }\r\n\r\n  const handleHide = () => {\r\n    setShowRes(false)\r\n  }\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className={classes.inputForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleSubmit}\r\n      style={{ width: '100%' }}\r\n    >\r\n      <Grid container\r\n        justify='center'\r\n        alignContent='center'\r\n        alignItems='center'\r\n        direction='column'\r\n        spacing={3}\r\n\r\n      >{showRes ?\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <h1 style={{ margin: '0' }}> COUNT DOWN TIMER </h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <h4 style={{ margin: '0' }}> made by MyNameIsHung </h4>\r\n            </Grid>\r\n            <Grid item>\r\n              <a href='https://github.com/MyNameIsHung' target='_blank' rel=\"noopener noreferrer\">\r\n                <Avatar alt=\"Remy Sharp\" src=\"https://image.flaticon.com/icons/png/512/37/37318.png\" />\r\n              </a>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            direction='row'\r\n            justify='center'\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Hour\"\r\n                variant=\"outlined\"\r\n                onChange={e => setHour(e.target.value)}\r\n                type='number'\r\n                className={classes.inputField}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <h2> : </h2>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Minute\"\r\n                variant=\"outlined\"\r\n                onChange={e => setMinute(e.target.value)}\r\n                className={classes.inputField}\r\n                type='number'\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <h2> : </h2>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Second\"\r\n                variant=\"outlined\"\r\n                onChange={e => setSecond(e.target.value)}\r\n                className={classes.inputField}\r\n                type='number'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        : null}\r\n\r\n        {showRes ? null :\r\n          <Grid item style={{ width: '100%' }} xs={12}>\r\n            <FullClock total={total} />\r\n          </Grid>\r\n        }\r\n        {showRes ?\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              className={classes.startButton}\r\n              variant=\"contained\"\r\n              color='primary'\r\n              type='submit'\r\n              onClick={handleHide}\r\n            >\r\n              START\r\n          </Button>\r\n          </Grid>\r\n\r\n          :\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              className={classes.resetButton}\r\n              variant=\"contained\"\r\n              color='primary'\r\n              type='submit'\r\n              onClick={refreshPage}\r\n              startIcon={<RestoreIcon />}\r\n            >\r\n              RESET\r\n              </Button>\r\n          </Grid>\r\n\r\n        }\r\n      </Grid>\r\n    </form >\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from './Input'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    width: '100%',\r\n    height: '900px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflowX: 'hidden',\r\n    // background: `url('https://i.pinimg.com/originals/f6/15/74/f615740d8ec75ad36e322ecd9da8b129.gif')`,\r\n  },\r\n}));\r\n\r\nexport default function MainClock() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Input />\r\n    </div>\r\n  );\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#000000',\r\n    },\r\n    hover: {\r\n      main: '#34b6cf',\r\n    },\r\n    active: {\r\n      main: '#2f9dc2',\r\n    },\r\n    text: {\r\n      main: '#0d2b36',\r\n    },\r\n    subtitle: {\r\n      main: '#566b72',\r\n    },\r\n    background: {\r\n      main: '#f7f8fa',\r\n    },\r\n    error: {\r\n      main: '#eb5757',\r\n    },\r\n    success: {\r\n      main: '#2ebb7b',\r\n    },\r\n  },\r\n  shadow: {\r\n    header: '0 2px 10px rgba(0, 0, 0, 0.1)',\r\n    hover: '0 0 6px rgba(0, 0, 0, 0.2)',\r\n    dropdown: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n    popup: '0 0 6px rgba(0, 0, 0, 0.2)'\r\n  },\r\n  typography: {\r\n    fontFamily: 'Sora',\r\n    h1: {\r\n      fontSize: '32px'\r\n    },\r\n    h2: {\r\n      fontSize: '28px'\r\n    },\r\n    h3: {\r\n      fontSize: '24px'\r\n    },\r\n    h4: {\r\n      fontSize: '20px'\r\n    },\r\n    h5: {\r\n      fontSize: '16px'\r\n    },\r\n    h6: {\r\n      fontSize: '14px'\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiButton: {\r\n      contained: {\r\n        backgroundColor: '#2ebb7b',\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n      }\r\n    }\r\n  },\r\n});\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainClock from './components/mainClock';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <MainClock />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}